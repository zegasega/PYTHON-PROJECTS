import pandas as pd
import numpy as np
from sklearn.preprocessing import StandartScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report



X= df['columns']
y = df['target']


X_train,X_test, y_train,y_test = train_test_split(X,y,test_size=0.3,random_state =42)

scaler = StandartScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)


model = DecisionTreeClassifier()

model.fit(X_train_scaled,y_train)

y_pred = model.predict(X_train_scaled,y_train)

accuracy = accuracy_score(y_test,y_pred)

print(f"Accuracy: {accuracy:.2f}")


report = classification_report(y_test,y_pred,target_name = df.target_names)
print(report)

cm = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', 
            xticklabels=['Class 0', 'Class 1'], 
            yticklabels=['Class 0', 'Class 1'])
plt.xlabel('Predicted Label')
plt.ylabel('True Label')
plt.title('Confusion Matrix')
plt.show()